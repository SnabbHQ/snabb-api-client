{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;AACA,IAAM,QAAQ,QAAQ,OAAR,CAAR;AACN,IAAM,IAAI,QAAQ,QAAR,CAAJ;AACN,IAAM,MAAM,QAAQ,kBAAR,CAAN;;AAEN,IAAM,WAAW,QAAQ,gBAAR,CAAX;AACN,IAAM,WAAW,QAAQ,gBAAR,CAAX;AACN,IAAM,QAAQ,QAAQ,aAAR,CAAR;AACN,IAAM,OAAO,QAAQ,YAAR,CAAP;AACN,IAAM,UAAU,QAAQ,eAAR,CAAV;;IAEA;AACJ,uBAAY,OAAZ,EAAqB;;;AACnB,QAAI,CAAC,QAAQ,aAAR,EAAuB,MAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN,CAA5B;AACA,QAAI,CAAC,QAAQ,SAAR,EAAmB,MAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN,CAAxB;AACA,WAAO,MAAP,CAAc,IAAd,EAAoB,OAApB,EAHmB;;AAKnB,QAAM,UAAU,QAAQ,OAAR,IAAmB,CAAC,QAAQ,UAAR,CALjB;AAMnB,QAAM,QAAS,UAAU,kBAAV,GAA+B,UAA/B,CANI;;AAQnB,UAAM,GAAN,CAAU,QAAV,EARmB;;AAUnB,UAAM,GAAN,CAAU,yBAAV,EAAqC,QAAQ,aAAR,CAArC,CAVmB;AAWnB,UAAM,GAAN,CAAU,qBAAV,EAAiC,QAAQ,SAAR,CAAjC,CAXmB;AAYnB,UAAM,GAAN,CAAU,wBAAV,EAAoC,QAAQ,YAAR,CAApC,CAZmB;AAanB,UAAM,GAAN,CAAU,mBAAV,EAA+B,OAA/B,EAbmB;AAcnB,UAAM,GAAN,CAAU,oBAAV,EAAgC,QAAQ,QAAR,CAAhC,CAdmB;AAenB,UAAM,GAAN,CAAU,iBAAV,EAA6B,QAAQ,KAAR,CAA7B,CAfmB;AAgBnB,UAAM,GAAN,CAAU,iBAAV,EAA6B,KAA7B,EAhBmB;AAiBnB,UAAM,GAAN,CAAU,iCAAV,EAA6C,QAAQ,qBAAR,IAAiC,EAAjC,CAA7C,CAjBmB;;AAmBnB,QAAI,QAAQ,KAAR,EAAe;AACjB,cAAQ,GAAR,CACE,uBADF,EAC4B,UAAU,SAAV,GAAsB,YAAtB,EAC1B,kBAFF,EAEsB,KAFtB,EADiB;KAAnB;;AAOA,QAAI,CAAC,QAAQ,UAAR,EACH,KAAK,sBAAL,GAA8B,IAAI,QAAJ,EAA9B,CADF;GA1BF;;;;mCA8Be,SAAS;AACtB,cAAQ,KAAR,GAAgB,QAAQ,KAAR,IAAiB,KAAK,KAAL,CADX;AAEtB,aAAO,IAAI,QAAJ,CAAa,OAAb,CAAP,CAFsB;;;;uCAKL,UAAU;AAC3B,YAAM,GAAN,CAAU,iCAAV,EAA6C,QAA7C,EAD2B;;;;;;;AAK/B,YAAY,QAAZ,GAAuB,QAAvB;AACA,YAAY,IAAZ,GAAmB,IAAnB;AACA,YAAY,KAAZ,GAAoB,KAApB;AACA,YAAY,OAAZ,GAAsB,OAAtB;AACA,YAAY,YAAZ,GAA2B,UAAS,OAAT,EAAkB;AAC3C,SAAO,IAAI,WAAJ,CAAgB,OAAhB,CAAP,CAD2C;CAAlB;;AAI3B,OAAO,OAAP,GAAiB,WAAjB","file":"index-compiled.js","sourcesContent":["'use strict';\nconst nconf = require('nconf');\nconst _ = require('lodash');\nconst API = require('./lib/ApiRequest');\n\nconst Delivery = require('./lib/Delivery');\nconst Location = require('./lib/Location');\nconst Quote = require('./lib/Quote');\nconst Item = require('./lib/Item');\nconst Contact = require('./lib/Contact');\n\nclass SnabbClient {\n  constructor(options) {\n    if (!options.client_secret) throw new Error(\"client_secret must be provided\");\n    if (!options.client_id) throw new Error(\"client_id must be provided\");\n    Object.assign(this, options);\n\n    const sandbox = options.sandbox || !options.production;\n    const scope = (sandbox ? 'delivery_sandbox' : 'delivery');\n\n    nconf.use('memory');\n\n    nconf.set('snabb_api_client_secret', options.client_secret);\n    nconf.set('snabb_api_client_id', options.client_id);\n    nconf.set('snabb_api_server_token', options.server_token);\n    nconf.set('snabb_api_sandbox', sandbox);\n    nconf.set('snabb_api_simulate', options.simulate);\n    nconf.set('snabb_api_debug', options.debug);\n    nconf.set('snabb_api_scope', scope);\n    nconf.set('snabb_api_polling_interval_secs', options.polling_interval_secs || 30);\n\n    if (options.debug) {\n      console.log(\n        'Initializing snabb in', (sandbox ? 'sandbox' : 'production'),\n        'mode with scope:', scope\n      );\n    }\n\n    if (!options.no_preload)\n      this._authenticationPromise = API.getToken();\n  }\n\n  createDelivery(options) {\n    options.debug = options.debug || this.debug;\n    return new Delivery(options);\n  }\n\n  setPollingInterval(interval) {\n    nconf.set('snabb_api_polling_interval_secs', interval);\n  }\n}\n\nSnabbClient.Delivery = Delivery;\nSnabbClient.Item = Item;\nSnabbClient.Quote = Quote;\nSnabbClient.Contact = Contact;\nSnabbClient.createClient = function(options) {\n  return new SnabbClient(options);\n};\n\nmodule.exports = SnabbClient;\n"]}