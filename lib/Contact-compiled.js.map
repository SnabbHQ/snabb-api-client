{"version":3,"sources":["Contact.js"],"names":[],"mappings":"AAAA;;;;AAEA,IAAM,IAAI,QAAQ,QAAR,CAAJ;AACN,IAAM,QAAQ,QAAQ,uBAAR,CAAR;AACN,IAAM,MAAM,MAAM,iBAAN;AACZ,IAAM,YAAY,MAAM,eAAN,CAAsB,WAAtB,EAAZ;;;;;;;;;;;;;;IAcA,UACJ,iBAAY,OAAZ,EAAqB;;;;;AACnB,IAAE,IAAF,CAAO,OAAP,EAAgB,UAAC,KAAD,EAAQ,GAAR,EAAgB;AAC9B,QAAI,OAAO,OAAP,IAAkB,KAAlB,EAAyB;AAC3B,UAAI,wBAAJ,CAD2B;;AAG3B,UAAI,MAAM,MAAN,EAAc;AAChB,YAAI;AACF,yBAAe,UAAU,KAAV,CAAgB,MAAM,MAAN,CAA/B,CADE;SAAJ,CAEE,OAAO,CAAP,EAAU;;;AAGV,cAAI,MAAM,MAAN,CAAa,OAAb,CAAqB,IAArB,MAA+B,CAAC,CAAD,IAAM,MAAM,MAAN,CAAa,OAAb,CAAqB,IAArB,EAA0B,EAA1B,EAA8B,MAA9B,IAAwC,EAAxC,EAA4C;AACnF,gBAAI;AACF,6BAAe,UAAU,KAAV,CAAgB,OAAO,MAAM,MAAN,CAAtC,CADE;aAAJ,CAEE,OAAO,CAAP,EAAU;AACV,sBAAQ,KAAR,CAAc,mCAAmC,MAAM,MAAN,GAAe,GAAlD,EAAuD,CAArE,EADU;aAAV;WAHJ,MAMO;;AAEL,gBAAI,QAAQ,MAAR,EAAgB,MAAM,CAAN,CAApB;WARF;SAHA;OAHJ;;AAmBA,cAAQ;AACN,gBAAQ,eAAe,UAAU,MAAV,CAAiB,YAAjB,EAA+B,IAAI,IAAJ,CAA9C,GAA0D,MAAM,MAAN;AAClE,qBAAa,MAAM,WAAN,IAAqB,KAArB;OAFf,CAtB2B;KAA7B;;AA4BA,UAAK,GAAL,IAAY,KAAZ,CA7B8B;GAAhB,CAAhB,CADmB;CAArB;;AAmCF,OAAO,OAAP,GAAiB,OAAjB","file":"Contact-compiled.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst phone = require('google-libphonenumber');\nconst PNF = phone.PhoneNumberFormat;\nconst phoneUtil = phone.PhoneNumberUtil.getInstance();\n\n/**\n  A contact.\n\n  @param contact.first_name string The first name of the contact.\n  @param contact.last_name string The last name of the contact.\n  @param contact.email string The email of the contact.\n\n  @param contact.phone object The phone details of the contact.\n  @param contact.phone.number string The phone number of the contact.\n  @param contact.phone.sms_enabled boolean If the phone has SMS capabilities.\n*/\n\nclass Contact {\n  constructor(options) {\n    _.each(options, (value, key) => {\n      if (key == 'phone' && value) {\n        let parsedNumber;\n\n        if (value.number) {\n          try { \n            parsedNumber = phoneUtil.parse(value.number);\n          } catch (e) {\n            // Try adding +1 if number is 10+ chars but lacks country code,\n            // as SnabbRush is only available in the US as of now.\n            if (value.number.indexOf('+1') === -1 && value.number.replace(/ /g,'').length >= 10) {\n              try { \n                parsedNumber = phoneUtil.parse('+1' + value.number);\n              } catch (e) {\n                console.error('Unable to parse phone number [' + value.number + ']', e);\n              }\n            } else {\n              // TODO also be strict if we're in the sandbox env\n              if (options.strict) throw e;\n            }\n          }\n        }\n\n        value = {\n          number: parsedNumber ? phoneUtil.format(parsedNumber, PNF.E164) : value.number,\n          sms_enabled: value.sms_enabled || false\n        };\n      }\n\n      this[key] = value;\n    });\n  }\n}\n\nmodule.exports = Contact;\n"]}