{"version":3,"sources":["Courier.js"],"names":[],"mappings":"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","file":"Courier-compiled.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst events = require('events');\nconst util = require('util');\nconst geodesy = require('./GeodesyWrapper');\nconst LatLon = geodesy.LatLonSpherical;\n\nconst Vehicle = require('./Vehicle.js');\n\n// meters per second traveled by bike \nconst mps = 5000 / 60 / 60;\n// frames per second -- how frequently to issue updates to courier animation\nconst fps = 1;\n\n/**\n  A courier.\n\n  @param location object {\n      \"latitude\":40.7619629893,\n      \"longitude\":-74.0014480227,\n      \"bearing\":33\n  }\n\n  @param name string Name of the courier, e.g. Rob\n  @param phone string Phone number of the courier, e.g. +12155551212\n  @param picture_url uri URI to a photo of the courier\n  @param vehicle Vehicle object\n*/\n\nclass Courier extends events.EventEmitter {\n  constructor(options) {\n    super();\n    events.EventEmitter.call(this);\n\n    _.each(options, (value, key) => {\n      if (key == 'vehicle') {\n        this.setVehicle(value);\n      } else if (key == 'location') {\n        this.location = new LatLon(value.latitude, value.longitude);\n        this.location.bearing = value.bearing;\n      }\n      else this[key] = value;\n    });\n\n    if (false && options.extrapolate) {\n      this.startPredicting();\n    }\n  }\n\n  setVehicle(vehicle) {\n    if (!(vehicle instanceof Vehicle)) {\n      vehicle = new Vehicle(vehicle);\n    }\n    this.vehicle = vehicle;\n\n    this.emit('vehicle', vehicle);\n  }\n\n  getLocation() {\n    return this.location.toSnabb();\n  }\n\n  predictNextLocation(time, speed, location) {\n    if (location) {\n     if (!(location instanceof LatLon)) location = new LatLon(location.latitude || location.lat, location.longitude || location.lon);\n    } else location = this.location;\n\n    // time must be in seconds\n    // speed in meters per second? yes\n    //\n    const distance = time * speed;\n    const point = location.destinationPoint(distance, location.bearing || 0);\n\n    return point;\n  }\n\n  setLocation(location) {\n    if (this.extrapolation) clearInterval(this.extrapolation);\n\n    this.location = location instanceof LatLon ? location : new LatLon(location.latitude || location.lat, location.longitude || location.lon);\n    this.location.bearing = location.bearing || 0;\n\n    this.emit('moved', this.location);\n\n    if (this.extrapolate) {\n      this.startPredicting();\n    }\n  }\n\n  startPredicting() {\n    let nextLocation;\n\n    this.extrapolation = setInterval(() => {\n      nextLocation = this.predictNextLocation(1.0/fps, mps, nextLocation);\n      nextLocation.bearing = this.location.bearing;\n      //console.log('moved', nextLocation.toSnabb());\n      this.emit('moved', nextLocation.toSnabb());\n    }, (1.0/fps)*1000);\n  }\n\n  // couriers might change, so we do need to be able to update all fields while maintaining this object during a delivery for subscribers' sakes\n  update(courierRecord) {\n    _.each(courierRecord, (value, key) => {\n      if (key == 'location') this.setLocation(value);\n      if (key == 'vehicle') this.setVehicle(value);\n      else this[key] = value;\n    });\n  }\n\n  done() {\n    if (this.extrapolation) clearInterval(this.extrapolation);\n    this.removeAllListeners();\n  }\n}\n\nmodule.exports = Courier;\n"]}