{"version":3,"sources":["Delivery.js"],"names":[],"mappings":"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","file":"Delivery-compiled.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst util = require('util');\nconst async = require('async');\nconst events = require('events');\nconst EventEmitter = events.EventEmitter;\nconst rest = require('restling');\nconst nconf = require('nconf');\nconst Q = require('q');\n\nconst Quote = require('./Quote');\nconst Location = require('./Location');\nconst Dropoff = require('./Dropoff');\nconst Pickup = require('./Pickup');\nconst Courier = require('./Courier');\nconst Item = require('./Item');\nconst API = require('./ApiRequest');\n\nconst DEFAULT_UPDATE_INTERVAL_SECONDS = 30;\nconst SIMULATION_UPDATE_INTERVAL_SECONDS = 30;\n\n// Maximum number of consecutive polling failures allowed before disabling\nconst MAX_UPDATE_FAILURES = 10;\n\n/**\n * Create a new delivery.\n *\n * @param options.pickup Location Location object defining where to pick up this delivery.\n * @param options.dropoff Location Location object defining where to drop off this delivery.\n *\n */\nclass Delivery extends EventEmitter {\n  constructor(options) {\n    super();\n    EventEmitter.call(this);\n    if (!options) options = {};\n\n    this.log = (nconf.get('snabb_api_debug') ? console.log.bind(console) : function () {});\n    this.items = [];\n    this.pollingFailures = 0;\n    this.updateInterval = (nconf.get('snabb_api_polling_interval_secs') || DEFAULT_UPDATE_INTERVAL_SECONDS);\n\n    if (options.pickup) this.setPickup(options.pickup);\n    if (options.dropoff) this.setDropoff(options.dropoff);\n    if (options.delivery_id) this.delivery_id = options.delivery_id;\n    if (options.order_reference_id) this.order_reference_id = options.order_reference_id;\n  }\n\n  addItem(item) {\n    preventDeliveryChanges(this);\n    this.items.push(item instanceof Item ? item : new Item(item));\n    this.log('Added item', item);\n  }\n\n  setPickup(pickup) {\n    preventDeliveryChanges(this);\n    if (pickup instanceof Location) this.pickup = new Pickup({location: pickup});\n    else if (pickup instanceof Pickup) this.pickup = pickup;\n    else this.pickup = new Pickup(pickup);\n  }\n\n  setDropoff(dropoff) {\n    preventDeliveryChanges(this);\n    if (dropoff instanceof Location) this.dropoff = new Dropoff({location: dropoff});\n    else if (dropoff instanceof Dropoff) this.dropoff = dropoff;\n    else this.dropoff = new Dropoff(dropoff);\n  }\n\n  addSpecialInstructions(special) {\n    preventDeliveryChanges(this);\n    this.special_instructions = special;\n  }\n\n  requireSignature(sig) {\n    preventDeliveryChanges(this);\n    if (sig === undefined) this.signature_required = true;\n    else this.require_signature = sig;\n  }\n\n  quote(quote) {\n    preventDeliveryChanges(this);\n\n    if (!quote) quote = {};\n    if (!quote.pickup) quote.pickup = this.pickup;\n    if (!quote.dropoff) quote.dropoff = this.dropoff;\n\n    if (!(quote.pickup instanceof Pickup)) {\n      throw new Error(\"Pickup location missing\");\n    }\n\n    if (!(quote.dropoff instanceof Dropoff)) {\n      throw new Error(\"Dropoff location missing\");\n    }\n\n    this.log('Posting', quote);\n    const self = this;\n\n    return API.post('deliveries/quote', quote)\n    .then(function(result) {\n      if (result.response.statusCode == 201) {\n        const data = (result.data||{}).quotes;\n        let quotes = [];\n        self.log('For quote request',data,'....');\n        _.each(data, function(val, idx) {\n          if (idx === 0) {\n            self.quote_id = val.quote_id;\n          }\n          quotes.push(new Quote(val));\n        });\n        self.log('Received quotes',quotes);\n        return quotes;\n      } else {\n        throw new Error(\"Quote failed\");\n      }\n    }, function(error) {\n      throw new Error(\"Quote failed: \" + error.response.raw);\n    });\n  }\n\n  confirm(options) {\n    if (!options) options = {};\n\n    const self = this;\n\n    // POST api.snabb.com/v1/deliveries\n    this.log('Creating delivery');\n    return API.post('deliveries', {\n      quote_id: options.quote_id || self.quote_id,\n      order_reference_id: options.order_reference_id || self.order_reference_id,\n      items: self.items,\n      pickup: options.pickup || self.pickup,\n      dropoff: options.dropoff || self.dropoff\n    }).then(function(result) {\n      if (result && result.response && (result.response.statusCode == 200 || result.response.statusCode == 201)) {\n        const data = result.data;\n        self.log('Delivery confirmed', data);\n        _.each(data, function(val, key) {\n          switch(key) {\n            case 'courier':\n              if (self.extrapolate) val.extrapolate = true;\n              val = new Courier(val);\n              break;\n\n            case 'items':\n              let items = [];\n              _.each(val, function(value) {\n                items.push(new Item(value));\n              });\n              val = items;\n              break;\n\n            case 'dropoff':\n              val = new Dropoff(val);\n              break;\n\n            case 'pickup':\n              val = new Pickup(val);\n              break;\n          }\n\n          self[key] = val;\n        });\n\n        // stored on delivery after reception:\n        // - fee\n        // - items\n        // - order_reference_id\n        // - delivery_id\n\n        self.emit('dropoff_eta', self.dropoff.eta);\n        self.emit('pickup_eta', self.pickup.eta);\n        self.emit('status', self.status);\n\n        self.log('Updating status');\n        self.updateStatus();\n        self.log('Delivery created', self.delivery_id);\n\n        const simulate = nconf.get('snabb_api_simulate') || false;\n        self.log('simulation', simulate);\n\n        if (simulate) {\n          self.simulate(simulate);\n        }\n\n        return self;\n      } else {\n        self.log('Snabb API unable to create delivery.', result);\n        throw new Error(result ?\n                        'Snabb API unable to create delivery. Response: ' + JSON.stringify(result) :\n                        'Snabb API unable to create delivery (null response)');\n      }\n    });\n  }\n\n  getPossibleStatuses() {\n    return ['en_route_to_pickup', 'at_pickup', 'en_route_to_dropoff', 'at_dropoff', 'completed'];\n  }\n\n  simulate(delay) {\n    const statuses = this.getPossibleStatuses();\n    //const statuses = ['no_couriers_available'];\n    const self = this;\n\n    let i = 0;\n    if (typeof delay !== 'number' || delay === 0) delay = SIMULATION_UPDATE_INTERVAL_SECONDS*1000;\n\n    let update = setInterval(function() {\n      if (!self.delivering) {\n        clearInterval(update);\n      } else if (i >= statuses.length) {\n        clearInterval(update);\n      } else {\n        self.updateStatus(statuses[i++]);\n        if (statuses[i-1] == 'en_route_to_dropoff') {\n          // next status is dropoff\n          // so we need to animate the delivery\n\n          //self.courier.extrapolate = true;\n          //self.courier.setLocation(self.pickup);\n        }\n      }\n    }, delay);\n\n    this.log('simulating delivery with a delay of ' + Math.ceil(delay/1000.00) + 's between stages');\n  }\n\n  updateStatus(status) {\n    const self = this;\n\n    // Check if we've reached the maximum number of allowed failures, clear\n    // the polling interview\n    if (this.pollingFailures > MAX_UPDATE_FAILURES) {\n      return stopDelivering(self);\n    }\n\n    let blockUpdate = Q(true);\n\n    if (status) {\n      // sandbox testing\n      this.log('updating status for sandbox testing (delivery_id='+this.delivery_id+'; status='+status+')');\n      blockUpdate = API.put('sandbox/deliveries/'+this.delivery_id, {\n        status: status\n      });\n    }\n\n    blockUpdate.then(() => {\n      // Exponential decay on time between failed status poll requests\n      const interval = self.updateInterval * Math.pow(2, self.pollingFailures) * 1000;\n\n      if (self.delivering) clearInterval(self.delivering);\n      self.delivering = setInterval(() => this.updateDeliveryInfo(), interval);\n    });\n  }\n\n  /**\n   * Call the delivery API for the latest information on this order\n   */\n  updateDeliveryInfo() {\n    this.log('polling this status');\n\n    return API\n      .get(`deliveries/${this.delivery_id}`)\n      .then(data => {\n        this.log('Receive API this data', data);\n\n        // Reset the number of failures when we successfully poll snabb\n        this.pollingFailures = 0;\n\n        if (!this.courier) {\n          this.courier = new Courier(data.courier);\n          this.courier.on('moved', data => this.emit('location', data));\n        }\n        else {\n          this.courier.update(data.courier);\n        }\n\n        if (!this.pickup && data.pickup) {\n          this.pickup = new Pickup(data.pickup);\n          this.pickup.eta = data.pickup.eta;\n        }\n\n        if (!this.dropoff && data.dropoff) {\n          this.dropoff = new Dropoff(data.dropoff);\n          this.dropoff.eta = data.dropoff.eta;\n        }\n\n        const status = (data || {}).status || 'unknown';\n        this.status = data.status;\n\n        // Emit the status event before determining if the current status is terminal\n        this.emit('status', status);\n\n        switch (data.status) {\n          case 'completed':\n          case 'returned':\n          case 'client_canceled':\n          case 'no_couriers_available':\n          case 'unable_to_deliver':\n            // terminal statuses: we stop polling if we receive one of these\n            this.complete(status);\n        }\n      })\n      .catch(err => {\n        // Increment the number of polling failures on failure\n        this.pollingFailures += 1;\n        this.log(err.message, err.stack);\n        throw err;\n      });\n  }\n\n  complete() {\n    stopDelivering(this);\n    if (this.courier) this.courier.done();\n  }\n\n  cancel() {\n    stopDelivering(this);\n\n    return API.post(`deliveries/${this.delivery_id}/cancel`).then(() => {\n      this.log('Canceled #'+ this.delivery_id);\n      return this;\n    });\n  }\n\n  getRatings(options) {\n    if (this.status !== 'completed' && !options) {\n      throw new Error('Cannot get ratings for an order that was not successfully completed (status='+this.status+')');\n    }\n\n    return API.get(`deliveries/${this.delivery_id}/ratings`)\n      .then(function(result) {\n        if (result.statusCode == 200) {\n          return result.data;\n        } else {\n          return result.message;\n        }\n      });\n  }\n\n  /* returns true if successful */\n  rate(options) {\n    if (this.status !== 'completed') throw new Error('Cannot rate an order that was not successfully completed');\n    if (!options) throw new Error('Missing rating object');\n    if (!options.waypoint || (options.waypoint !== 'pickup' && options.waypoint !== 'dropoff')) {\n      throw new Error('Waypoint required: \"pickup\" or \"dropoff\"');\n    }\n\n    if (!options.rating_type) options.rating_type = 'binary'; // only supported type as of now (2016-10-12)\n    if (!options.tags) options.tags = [];\n\n    return API.post(`deliveries/${this.delivery_id}/ratings`, options);\n  }\n}\n\nDelivery.list = function() {\n  return API.get('deliveries').then(function(result) {\n    let rv = [];\n    for (let i = 0; i < result.length; i++) {\n      rv.push(new Delivery(result[i]));\n    }\n    return rv;\n  }, function() {\n    return [];\n  });\n};\n\nfunction stopDelivering(delivery) {\n  if (delivery.delivering) {\n    clearInterval(delivery.delivering);\n    delete delivery.delivering;\n\n    delivery.removeAllListeners();\n  }\n}\n\nfunction preventDeliveryChanges(delivery) {\n  if (delivery.delivery_id) throw new Error(\"Delivery in progress; no changes possible\");\n}\nmodule.exports = Delivery;\n"]}